// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique @db.VarChar(20)
  username String @unique @db.VarChar(10)
  password String

  Profile Profile?
  Orders  Order[]
}

model Profile {
  id         Int      @id @default(autoincrement())
  user_id    Int      @unique
  package_id Int
  full_name  String   @db.VarChar(25)
  dob        DateTime @db.Date
  bio        String   @db.VarChar(100)

  user    User    @relation(fields: [user_id], references: [id])
  package Package @relation(fields: [package_id], references: [id])

  swiped_by Swipes[] @relation("swiped_by")
  swiping   Swipes[] @relation("swiping")
}

model Swipes {
  id        Int      @id @default(autoincrement())
  swiper_id Int
  swipee_id Int
  date      DateTime @db.Date
  like      Boolean  @default(false)

  swiper Profile @relation("swiped_by", fields: [swiper_id], references: [id])
  swipee Profile @relation("swiping", fields: [swipee_id], references: [id])
}

model Package {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(20)
  description String @db.VarChar(200)

  Profile        Profile[]
  Orders         Order[]
  PackageFeature PackageFeature[]
}

model Feature {
  id          Int    @id @default(autoincrement())
  code        String @db.VarChar(6)
  description String @db.VarChar(15)

  PackageFeature PackageFeature[]
}

model PackageFeature {
  package_id Int
  feature_id Int

  feature Feature @relation(fields: [feature_id], references: [id])
  package Package @relation(fields: [package_id], references: [id])

  @@id([package_id, feature_id])
}

model Order {
  id         Int @id @default(autoincrement())
  user_id    Int
  package_id Int

  package Package   @relation(fields: [package_id], references: [id])
  user    User      @relation(fields: [user_id], references: [id])
  Payment Payment[]
}

model Payment {
  id       Int    @id @default(autoincrement())
  order_id Int    @unique
  status   String @db.VarChar

  order Order @relation(fields: [order_id], references: [id])
}
